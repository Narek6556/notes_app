// **************************************************************************
// StoreGenerator
// **************************************************************************

// ignore_for_file: non_constant_identifier_names, unnecessary_brace_in_string_interps, unnecessary_lambdas, prefer_expression_function_bodies, lines_longer_than_80_chars, avoid_as, avoid_annotating_with_dynamic, no_leading_underscores_for_local_identifiers

mixin _$AuthViewModel on AuthViewModelBase, Store {
  late final _$formModeAtom =
      Atom(name: 'AuthViewModelBase.formMode', context: context);

  @override
  FormMode get formMode {
    _$formModeAtom.reportRead();
    return super.formMode;
  }

  @override
  set formMode(FormMode value) {
    _$formModeAtom.reportWrite(value, super.formMode, () {
      super.formMode = value;
    });
  }

  late final _$emailAtom =
      Atom(name: 'AuthViewModelBase.email', context: context);

  @override
  String get email {
    _$emailAtom.reportRead();
    return super.email;
  }

  @override
  set email(String value) {
    _$emailAtom.reportWrite(value, super.email, () {
      super.email = value;
    });
  }

  late final _$usernameAtom =
      Atom(name: 'AuthViewModelBase.username', context: context);

  @override
  String get username {
    _$usernameAtom.reportRead();
    return super.username;
  }

  @override
  set username(String value) {
    _$usernameAtom.reportWrite(value, super.username, () {
      super.username = value;
    });
  }

  late final _$passwordAtom =
      Atom(name: 'AuthViewModelBase.password', context: context);

  @override
  String get password {
    _$passwordAtom.reportRead();
    return super.password;
  }

  @override
  set password(String value) {
    _$passwordAtom.reportWrite(value, super.password, () {
      super.password = value;
    });
  }

  late final _$AuthViewModelBaseActionController =
      ActionController(name: 'AuthViewModelBase', context: context);

  @override
  void validateEmail(String email) {
    final _$actionInfo = _$AuthViewModelBaseActionController.startAction(
        name: 'AuthViewModelBase.validateEmail');
    try {
      return super.validateEmail(email);
    } finally {
      _$AuthViewModelBaseActionController.endAction(_$actionInfo);
    }
  }

  @override
  void validatePassword(String password) {
    final _$actionInfo = _$AuthViewModelBaseActionController.startAction(
        name: 'AuthViewModelBase.validatePassword');
    try {
      return super.validatePassword(password);
    } finally {
      _$AuthViewModelBaseActionController.endAction(_$actionInfo);
    }
  }

  @override
  dynamic validateUsername(String username) {
    final _$actionInfo = _$AuthViewModelBaseActionController.startAction(
        name: 'AuthViewModelBase.validateUsername');
    try {
      return super.validateUsername(username);
    } finally {
      _$AuthViewModelBaseActionController.endAction(_$actionInfo);
    }
  }

  @override
  void setLoginFormState(FormMode mode) {
    final _$actionInfo = _$AuthViewModelBaseActionController.startAction(
        name: 'AuthViewModelBase.setLoginFormState');
    try {
      return super.setLoginFormState(mode);
    } finally {
      _$AuthViewModelBaseActionController.endAction(_$actionInfo);
    }
  }

  @override
  bool login(Map<String, String> userData) {
    final _$actionInfo = _$AuthViewModelBaseActionController.startAction(
        name: 'AuthViewModelBase.login');
    try {
      return super.login(userData);
    } finally {
      _$AuthViewModelBaseActionController.endAction(_$actionInfo);
    }
  }

  @override
  bool signUp(Map<String, String> user) {
    final _$actionInfo = _$AuthViewModelBaseActionController.startAction(
        name: 'AuthViewModelBase.signUp');
    try {
      return super.signUp(user);
    } finally {
      _$AuthViewModelBaseActionController.endAction(_$actionInfo);
    }
  }

  @override
  String toString() {
    return '''
formMode: ${formMode},
email: ${email},
username: ${username},
password: ${password}
    ''';
  }
}
